from pygments.token import Token


TOKENS = [
  (Token.Punctuation, '<'),
  (Token.Name.Tag, 'template'),
  (Token.Punctuation, '>'),
  (Token.Text, '\n  '),
  (Token.Comment, '<!--'),
  (Token.Text, ' '),
  (Token.Name.Other, 'sample'),
  (Token.Text, ' '),
  (Token.Name.Other, 'comment'),
  (Token.Text, ' '),
  (Token.Operator, '--'),
  (Token.Operator, '>'),
  (Token.Text, '\n  '),
  (Token.Punctuation, '<'),
  (Token.Name.Tag, 'p'),
  (Token.Punctuation, '>'),
  (Token.Punctuation, '{'),
  (Token.Punctuation, '{'),
  (Token.Text, ' '),
  (Token.Name.Other, 'greeting'),
  (Token.Text, ' '),
  (Token.Punctuation, '}'),
  (Token.Punctuation, '}'),
  (Token.Text, ' '),
  (Token.Name.Other, 'World'),
  (Token.Operator, '!'),
  (Token.Punctuation, '<'),
  (Token.Punctuation, '/'),
  (Token.Name.Tag, 'p'),
  (Token.Punctuation, '>'),
  (Token.Text, '\n'),
  (Token.Punctuation, '<'),
  (Token.Punctuation, '/'),
  (Token.Name.Tag, 'template'),
  (Token.Punctuation, '>'),
  (Token.Text, '\n\n'),
  (Token.Punctuation, '<'),
  (Token.Name.Tag, 'script'),
  (Token.Punctuation, '>'),
  (Token.Text, '\n  '),
  (Token.Comment.Single, '// sample comment\n'),
  (Token.Text, ''),
  (Token.Text, '  '),
  (Token.Name.Other, 'module'),
  (Token.Punctuation, '.'),
  (Token.Name.Other, 'exports'),
  (Token.Text, ' '),
  (Token.Operator, '='),
  (Token.Text, ' '),
  (Token.Punctuation, '{'),
  (Token.Text, '\n    '),
  (Token.Name.Other, 'data'),
  (Token.Operator, ':'),
  (Token.Text, ' '),
  (Token.Keyword.Declaration, 'function'),
  (Token.Text, ' '),
  (Token.Punctuation, '('),
  (Token.Punctuation, ')'),
  (Token.Text, ' '),
  (Token.Punctuation, '{'),
  (Token.Text, '\n      '),
  (Token.Keyword, 'return'),
  (Token.Text, ' '),
  (Token.Punctuation, '{'),
  (Token.Text, '\n        '),
  (Token.Name.Other, 'greeting'),
  (Token.Operator, ':'),
  (Token.Text, ' '),
  (Token.Literal.String.Single, "'Hello'"),
  (Token.Text, '\n      '),
  (Token.Punctuation, '}'),
  (Token.Text, '\n    '),
  (Token.Punctuation, '}'),
  (Token.Text, '\n  '),
  (Token.Punctuation, '}'),
  (Token.Text, '\n'),
  (Token.Punctuation, '<'),
  (Token.Punctuation, '/'),
  (Token.Name.Tag, 'script'),
  (Token.Punctuation, '>'),
  (Token.Text, '\n\n'),
  (Token.Punctuation, '<'),
  (Token.Name.Tag, 'style'),
  (Token.Text, ' '),
  (Token.Name.Attribute, 'scoped'),
  (Token.Punctuation, '>'),
  (Token.Text, '\n  '),
  (Token.Comment.Multiline, '/* sample comment */'),
  (Token.Text, '\n  '),
  (Token.Name.Other, 'p'),
  (Token.Text, ' '),
  (Token.Punctuation, '{'),
  (Token.Text, '\n    '),
  (Token.Name.Other, 'font'),
  (Token.Operator, '-'),
  (Token.Name.Other, 'size'),
  (Token.Operator, ':'),
  (Token.Text, ' '),
  (Token.Literal.Number.Integer, '2'),
  (Token.Name.Other, 'em'),
  (Token.Punctuation, ';'),
  (Token.Text, '\n    '),
  (Token.Name.Other, 'text'),
  (Token.Operator, '-'),
  (Token.Name.Other, 'align'),
  (Token.Operator, ':'),
  (Token.Text, ' '),
  (Token.Name.Other, 'center'),
  (Token.Punctuation, ';'),
  (Token.Text, '\n  '),
  (Token.Punctuation, '}'),
  (Token.Text, '\n'),
  (Token.Punctuation, '<'),
  (Token.Punctuation, '/'),
  (Token.Name.Tag, 'style'),
  (Token.Punctuation, '>'),
  (Token.Text, '\n')
]
